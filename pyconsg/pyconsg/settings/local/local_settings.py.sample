"""Local settings for the pyconsg project."""
import os

from pyconsg.settings.base_settings import PROJECT_ROOT


DEBUG = True
SANDBOX = True
TEMPLATE_DEBUG = DEBUG
EMAIL_DEBUG = DEBUG
ADMIN_URL = r'^admin/'
ANALYTICS_TRACKING_ID = ''
DEFAULT_HTTP_PROTOCOL = 'http'

# =============================================================================
# DATABASE SETTINGS
# =============================================================================

# First create your DB role like so:
# CREATE ROLE pyconsg LOGIN CREATEDB VALID UNTIL 'infinity';

# Then run `fab rebuild` to create the database.

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',  # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.  # NOPEP8
        'NAME': 'pyconsg',                      # Or path to database file if using sqlite3.  # NOPEP8
        'USER': 'pyconsg',                      # Not used with sqlite3.
        'PASSWORD': 'DB_PASSWORD',                  # Not used with sqlite3.
        'HOST': '',                    # Set to empty string for localhost. Not used with sqlite3.  # NOPEP8
        'PORT': '',                             # Set to empty string for default. Not used with sqlite3.  # NOPEP8
    }
}

# Set this to your postgres superuser. If you are using postgres.app on OSX,
# this is usually your OS login name.
# LOCAL_PG_ADMIN_ROLE = 'username'

# =============================================================================
# EMAIL SETTINGS
# =============================================================================
ADMINS = (
    ('Yourname', 'yourname@example.com'),
)

MANAGERS = ADMINS


# ============================================================================
# Local Development Email Settings
# comment these on the production server
# ============================================================================

# When you are playing around with the app and you expect that an email should
# have been sent, just run `./manage.py send_mail` and you will get the mail
# to the ADMINS account, no matter who the real recipient was.
MAILER_EMAIL_BACKEND = 'django_libs.test_email_backend.EmailBackend'
TEST_EMAIL_BACKEND_RECIPIENTS = ADMINS

FROM_EMAIL = ADMINS[0][1]
EMAIL_SUBJECT_PREFIX = '[dev pyconsg] '

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = FROM_EMAIL

# Enter your gmail PW from the ADMINS email entered above.
EMAIL_HOST_PASSWORD = 'yourgmailpw'
EMAIL_PORT = 587


# ============================================================================
# Production Server Settings Email Settings
# uncomment these on the production server
# ============================================================================

# TODO: Which will be our pyconsg email?
#FROM_EMAIL = "mbrochh@gmail.com"
#EMAIL_SUBJECT_PREFIX = '[pyconsg] '

#EMAIL_HOST = 'smtp.webfaction.com'
#EMAIL_HOST_USER = 'pyconsg'
#EMAIL_HOST_PASSWORD = ""
#EMAIL_PORT = 25


# ============================================================================
# More general email settings
# ============================================================================
DEFAULT_FROM_EMAIL = FROM_EMAIL
SERVER_EMAIL = FROM_EMAIL
EMAIL_USE_TLS = True



# =============================================================================
# FOLDER SETTINGS
# =============================================================================

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"

# Point this to a path outside of your project root because otherwise you might
# accidentally commit static and media files when setting DEBUG = False for
# testing purposes.
MEDIA_ROOT = os.path.join(PROJECT_ROOT, '../../pyconsg_media')
STATIC_ROOT = os.path.join(PROJECT_ROOT, '../../pyconsg_static')


# Make this unique, and don't share it with anybody.
SECRET_KEY = 'http://www.miniwebtool.com/django-secret-key-generator/'


# =============================================================================
# PAYPAL SETTINGS
# =============================================================================

# Uncomment this when developing locally
# Install localtunnel and set your HOSTNAME accordingly when testing the
# checkout view in your browser locally.
# HOSTNAME = 'http://XXXX.localtunnel.com'

# PAYPAL_API_URL = 'https://api-3t.sandbox.paypal.com/nvp'
# PAYPAL_LOGIN_URL = (
#     'https://www.sandbox.paypal.com/cgi-bin/webscr?cmd=_express-checkout&token='
# )

# PAYPAL_USER = 'username'
# PAYPAL_PWD = 'password'
# PAYPAL_SIGNATURE = 'signature'
